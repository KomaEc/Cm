	return	
	reg%1	<	reg%2	 skip if not true
	jump	1
	return	
	reg%4 = reg%1	+	1.
	mov	reg%3	reg%4
	mov	reg%5	reg%2
	load_table	reg%7	reg%0	reg%1
	mov	reg%6	reg%7
	reg%5	<	reg%3	 skip if not true
	jump	24
	load_table	reg%8	reg%0	reg%5
	mov	reg%7	reg%8
	reg%6	<	reg%7	 skip if not true
	jump	17
	reg%5	<	reg%3	 skip if not true
	jump	4
	load_table	reg%9	reg%0	reg%3
	mov	reg%8	reg%9
	reg%8	<	reg%6	 skip if not true
	jump	8
	reg%5	<	reg%3	 skip if not true
	jump	-14
	load_table	reg%10	reg%0	reg%3
	mov	reg%9	reg%10
	load_table	reg%10	reg%0	reg%5
	set_table	reg%0	reg%3	reg%10
	set_table	reg%0	reg%5	reg%9
	jump	-20
	reg%10 = reg%3	+	1.
	mov	reg%3	reg%10
	jump	-17
	reg%11 = reg%5	-	1.
	mov	reg%5	reg%11
	jump	-24
	load_table	reg%12	reg%0	reg%5
	set_table	reg%0	reg%1	reg%12
	set_table	reg%0	reg%5	reg%6
	reg%13 = reg%5	-	1.
	mov	reg%12	reg%13
	mov	reg%15	reg%0
	mov	reg%16	reg%1
	mov	reg%17	reg%12
	get_global	reg%14	"quick"
	call	reg%14	4	1
	reg%19 = reg%5	+	1.
	mov	reg%18	reg%19
	mov	reg%21	reg%0
	mov	reg%22	reg%18
	mov	reg%23	reg%2
	get_global	reg%20	"quick"
	call	reg%20	4	1
	return	
	return	
	load_const	reg%1	10.
	mov	reg%0	reg%1
	make_table	reg%3	16	0
	mov	reg%2	reg%3
	load_const	reg%5	0.
	mov	reg%4	reg%5
	reg%4	<	reg%0	 skip if not true
	jump	26
	reg%7 = reg%0	-	1.
	mov	reg%6	reg%7
	load_const	reg%8	0.
	mov	reg%10	reg%2
	mov	reg%11	reg%8
	mov	reg%12	reg%6
	closure	reg%9	1
	set_global		"quick"	reg%9
	call	reg%9	4	1
	load_const	reg%13	0.
	mov	reg%4	reg%13
	reg%4	<	reg%0	 skip if not true
	jump	1
	return	
	load_table	reg%15	reg%2	reg%4
	mov	reg%14	reg%15
	get_global	reg%15	"string"
	load_table	reg%16	reg%15	"format"
	load_const	reg%17	"%i"
	mov	reg%18	reg%14
	call	reg%16	3	2
	get_global	reg%15	"print"
	call	reg%15	2	1
	reg%15 = reg%4	+	1.
	mov	reg%4	reg%15
	jump	-15
	reg%16 = reg%0	-	reg%4
	set_table	reg%2	reg%4	reg%16
	reg%17 = reg%4	+	1.
	mov	reg%4	reg%17
	jump	-33
	return	
